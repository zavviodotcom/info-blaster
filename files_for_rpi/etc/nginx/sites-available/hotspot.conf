server { 
    # Listening on IP Address.
    # This is the website iptables redirects to
    listen       80 default_server;
    root         /var/www;

    if ($request_method !~ ^(GET|HEAD|POST)$) { return 444; }
    
    # generate_204
    location /generate_204 {
        types { } default_type \"text/html\";
        add_header 'Cache-Control' 'no-cache';
        return 200 \"<html><head><title>Info-blaster redirect</title></head><meta http-equiv='refresh' content = '0; url-index.html'><body><p>Information portal. Click <a href='index.html'>here</a> to continue.</p></body></html>\\r\\n\";
    }

    # /blank.html
    location /blank.html {
        return 302 http://localnet.info-blaster/;
    }

    # /gen_204
    location /gen_204 {
        return 302 http://localnet.info-blaster/;
    }

    # /ncsi.txt
    location /ncsi.txt {
        return 302 http://localnet.info-blaster/;
    }

    # /success.txt
    location /success.txt {
        return 302 http://localnet.info-blaster/;
    }

    # connectivitycheck.gstatic.com
    location connectivitycheck.gstatic.com {
        types { } default_type \"text/html\";
        add_header 'Cache-Control' 'no-cache';
        return 200 \"<html><head><title>Info-blaster redirect</title></head><meta http-equiv='refresh' content = '0; url-index.html'><body><p>Information portal. Click <a href='index.html'>here</a> to continue.</p></body></html>\\r\\n\";
    }

    # /mobile/status.php
    location /mobile/status.php {
        types { } default_type \"text/html\";
        add_header 'Cache-Control' 'no-cache';
        return 200 \"<html><head><title>Info-blaster redirect</title></head><meta http-equiv='refresh' content = '0; url-index.html'><body><p>Information portal. Click <a href='index.html'>here</a> to continue.</p></body></html>\\r\\n\";
    }

    # /hotspot-detect.html
    location /hotspot-detect.html {
        return 302 http://localnet.info-blaster/;
    }

    # /hotspotdetect.html
    location /hotspotdetect.html {
        return 302 http://localnet.info-blaster/;
    }

    # /library/test/success.html
    location /library/test/success.html {
        return 302 http://localnet.info-blaster/;
    }

    # For iOS
    if ($http_user_agent ~* (CaptiveNetworkSupport) ) {
        return 302 http://localnet.info-blaster/hotspot.html;
    }

    # For others
    location / {
        return 302 http://localnet.info-blaster/;
    }

    location ~ \\.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
    }
}

server {
     listen       80;
     server_name  localnet.info-blaster;
     root         /var/www;

    location /admin {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }

    location /adminDS {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }

    location /adminScripts {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }
    
    location /past {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }
    
    location /viewSetTime {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }
    
    location /private {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }
    
    location /activation {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }

    location /advanced {
    auth_basic \"Restricted\";
    auth_basic_user_file /etc/nginx/passwd/.htpasswd;
    index index.html index.htm index.php;
    }

    location /_ {
        try_files $uri $uri/ index.php;
        index index.html index.htm;
        autoindex on;
        autoindex_exact_size off;
    }

    location / {
        try_files $uri $uri/ index.php;

        index index.html index.htm;
    }
    
    # Pass all .php files onto a php-fpm/php-fcgi server.
    location ~ [^/]\\.php(/|$) {
    	fastcgi_split_path_info ^(.+?\\.php)(/.*)$;
    	if (!-f $document_root$fastcgi_script_name) {
    		return 404;
    	}
    	# This is a robust solution for path info security issue and works with \"cgi.fix_pathinfo = 1\" in /etc/php.ini (default)
    	include fastcgi_params;
    	fastcgi_index index.php;
    	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    	fastcgi_pass php;
    }
